spec:
  # this would apply to control plane components
  logging:
    level: info
    componentLevel: {}
    logAsJSON: false

  policy:
    type: Istiod # or Mixer or Remote
    # one of the following
    mixer: # legacy v1
      enableChecks: false
      failOpen: false
    # or
    remote:
      address: my-remote-policy.example.com
      createServices: false
      enableChecks: false
      failOpen: false
    # or v2
    istiod: {}

  telemetry:
    type: Istiod # or Mixer or Remote
    # one of the following
    mixer: # legacy v1
      sessionAffinity: false
      batching:
        maxEntries: 100
        maxTime: 1s
    # or
    remote:
      address: my-remote-telemetry.example.com
      createServices: false
      sessionAffinity: false
      batching:
        maxEntries: 100
        maxTime: 1s
    # or v2
    istiod:
      # any or all of the following
      metadataExchange:
        wasmEnabled: false
      prometheusFilter:
        scrape: true
        wasmEnabled: false
      stackDriverFilter:
        logging: false
        monitoring: false
        topology: false
        disableOutbound: false
        configOverride: {}

  proxy:
    adminPort: 15000
    concurrency: 0

    # this would apply only to proxies
    logging:
      level: info
      componentLevel: {}
      logAsJSON: false

    networking:
      connectionTimeout: 10s

      initialization:
        type: CNI # or InitContainer
        # one of the following
        cni: {}
        # or
        initContainer: {}

      trafficControl:
        interceptionMode: REDIRECT
        inbound:
          includedPorts: "*"
        outbound:
          includeIPRanges: []
          excludedIPRanges: []
          excludedPorts: []
          policy: ALLOW_ANY

      protocol:
        detectionTimeout: 100ms
        debug:
          enableInboundSniffing: false
          enableOutboundSniffing: false

      dns:
        searchSuffixes: []

    readiness:
      rewriteApplicationProbes: false
      statusPort: 15020
      initialDelaySeconds: 1
      periodSeconds: 2
      failureThreshold: 30

  security:
    mutualTLS:
      auto: true
      trust:
        domain: cluster.local
        additionalDomains: [some-other.cluster]
      certificateAuthority:
        workloadCertTTLDefault: 24h
        workloadCertTTLMax: 90d

        type: Istiod # or Custom
        # one of the following
        istiod:
          type: SelfSigned # or PrivateKey
          # one of the following
          selfSigned:
            ttl: 10y
            gracePeriod: 20%
            checkPeriod: 1h
            enableJitter: true
            org: cluster.local # XXX: there is overlap between this and security.trust.domain
          # or
          privateKey:
            encryptionSecret: cacerts # currently not configurable
            rootCADir: /etc/cacerts
            signingKeyFile: ca-key.pem # currently not configurable
            signingCertFile: ca-cert.pem # currently not configurable
            rootCertFile: root-cert.pem # currently not configurable
            certChainFile: cert-chain.pem # currently not configurable
        # or
        custom:
          address: some.location.domain

      identity:
        type: Kubernetes # or ThirdParty
        # one of
        kubernetes: {}
        # or
        thirdParty:
          tokenPath: /var/run/secrets/tokens/istio-token # currently not configurable
          issuer: ""
          audience: istio-ca

      controlPlane:
        enable: true
        certProvider: Istiod # or Kubernetes or Custom

  tracing:
    type: Jaeger # or Zipkin, Lightstep, Datadog, Stackdriver
    jaeger: {}
    lightstep: {}
    datadog: {}
    stackdriver: {}
