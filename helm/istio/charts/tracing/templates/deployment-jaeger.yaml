{{ if eq .Values.provider "jaeger" }}

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jaeger-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    jaeger-infra: collector-deployment
    chart: {{ template "tracing.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jaeger
        jaeger-infra: collector-pod
        chart: {{ template "tracing.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14268"
    spec:
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      serviceAccountName: jaeger
      containers:
      - image: "{{ .Values.jaeger.hub }}/jaeger-collector:{{ .Values.jaeger.tag }}"
        name: jaeger-collector
        command:
          - "/go/bin/collector-linux"
          - "--config-file=/conf/collector.yaml"
        ports:
        - containerPort: 14267
          protocol: TCP
        - containerPort: 14268
          protocol: TCP
        - containerPort: 9411
          protocol: TCP
        volumeMounts:
        - name: jaeger-configuration-volume
          mountPath: /conf
        env:
        - name: SPAN_STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              name: jaeger-configuration
              key: span-storage-type
        resources:
{{- if .Values.jaeger.resources }}
{{ toYaml .Values.jaeger.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
      volumes:
        - configMap:
            name: jaeger-configuration
            items:
              - key: collector
                path: collector.yaml
          name: jaeger-configuration-volume
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jaeger-query
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    jaeger-infra: query-deployment
    chart: {{ template "tracing.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jaeger
        jaeger-infra: query-pod
        chart: {{ template "tracing.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "16686"
    spec:
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      serviceAccountName: jaeger
      containers:
      - image: "{{ .Values.jaeger.hub }}/jaeger-query:{{ .Values.jaeger.tag }}"
        name: jaeger-query
        command:
          - "/go/bin/query-linux"
          - "--config-file=/conf/query.yaml"
        ports:
        - containerPort: 16686
          protocol: TCP
        readinessProbe:
          httpGet:
            path: "/"
            port: 16686
        volumeMounts:
        - name: jaeger-configuration-volume
          mountPath: /conf
        env:
        - name: SPAN_STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              name: jaeger-configuration
              key: span-storage-type
        resources:
{{- if .Values.jaeger.resources }}
{{ toYaml .Values.jaeger.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
      volumes:
        - configMap:
            name: jaeger-configuration
            items:
              - key: query
                path: query.yaml
              - key: ui
                path: ui.json
          name: jaeger-configuration-volume
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: jaeger-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app: jaeger
    jaeger-infra: agent-daemonset
    chart: {{ template "tracing.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  template:
    metadata:
      labels:
        app: jaeger
        jaeger-infra: agent-instance
        chart: {{ template "tracing.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5778"
    spec:
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      serviceAccountName: jaeger
      containers:
      - name: agent-instance
        image: "{{ .Values.jaeger.hub }}/jaeger-agent:{{ .Values.jaeger.tag }}"
        command:
        - "/go/bin/agent-linux"
        - "--config-file=/conf/agent.yaml"
        volumeMounts:
        - name: jaeger-configuration-volume
          mountPath: /conf
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        resources:
{{- if .Values.jaeger.resources }}
{{ toYaml .Values.jaeger.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
        - configMap:
            name: jaeger-configuration
            items:
              - key: agent
                path: agent.yaml
          name: jaeger-configuration-volume
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}

{{ end }}
