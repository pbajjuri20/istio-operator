// +build !ignore_autogenerated

// Code generated by defaulter-gen. DO NOT EDIT.

package v1alpha2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&IstioControlPlane{}, func(obj interface{}) { SetObjectDefaults_IstioControlPlane(obj.(*IstioControlPlane)) })
	return nil
}

func SetObjectDefaults_IstioControlPlane(in *IstioControlPlane) {
	SetDefaults_GeneralConfig(&in.Spec.General)
	SetDefaults_DeploymentConfig(&in.Spec.General.DeploymentDefaults)
	SetDefaults_ArchSchedulingPrefs(&in.Spec.General.PodSchedulingPrefs)
	SetDefaults_MonitoringConfig(&in.Spec.Monitoring)
	SetDefaults_SecurityConfig(&in.Spec.Security)
	SetDefaults_CitadelConfig(&in.Spec.Security.Citadel)
	SetDefaults_GalleyConfig(&in.Spec.Galley)
	SetDefaults_PilotConfig(&in.Spec.Pilot)
	SetDefaults_ProxyConfig(&in.Spec.Proxy)
	SetDefaults_SidecarInjectorConfig(&in.Spec.SidecarInjector)
	if in.Spec.Gateways != nil {
		SetDefaults_GatewaysConfig(in.Spec.Gateways)
	}
	SetDefaults_MixerConfig(&in.Spec.Mixer)
	if in.Spec.PrometheusConfig != nil {
		SetDefaults_DeploymentConfig(&in.Spec.PrometheusConfig.DeploymentConfig)
	}
}
